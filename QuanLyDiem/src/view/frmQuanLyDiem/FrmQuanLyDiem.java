/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.frmQuanLyDiem;

import controller.Controller;
import dao.SinhVienDAO;
import dao.DiemDAO;
import dao.MonDAO;
import dao.LopDocLapDAO;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.geom.RoundRectangle2D;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import model.Diem;
import model.DiemTichLuy;
import model.Lop;
import model.LopDocLap;
import model.Mon;
import model.SinhVien;
import ui.CustomCellRenderer;
import ui.CustomTableDiem;
import ui.CustomTableInforSV;
import ui.RoundedPanel;
//import view.FrmDangNhap;
//import view.FrmMain;

/**
 *
 * @author hoang
 */
public class FrmQuanLyDiem extends javax.swing.JInternalFrame {

    private boolean isClick;
    private int idChanged;
    private int sizeChanged;
    /**
     * Trang thai bang
     */
    private boolean dangTimKiem = false;
    /**
     * Loai dialog
     */
    private boolean dialogType;//true: them, false:sua
    /**
     * Khai bao hang duoc chon
     */
    private int selectedRow = -1;
    /**
     * Khai bao icon
     */
    private final ImageIcon iconThem = new ImageIcon(getClass().getResource("/resouces/add.png"));
    private final ImageIcon iconSua = new ImageIcon(getClass().getResource("/resouces/draw.png"));
    /**
     * Declare mouse status
     */
    private final Cursor defaultMouse = new Cursor(Cursor.DEFAULT_CURSOR);
    private final Cursor handleMouse = new Cursor(Cursor.HAND_CURSOR);
    /**
     * Declare color:
     */
    private final Color colorMenu = new Color(2, 62, 116);
    private final Color colorHoverMenu = new Color(121, 172, 219);
    private final Color colorBtnDialog = new Color(91, 128, 165);
    private final Color colorBtnDialogHover = new Color(137, 194, 250);
    /**
     * Khai bao danh sach, so trang, trang hien tai
     */
    private ArrayList<Lop> dsLop = new ArrayList<>();
    private ArrayList<Diem> dsDiem = new ArrayList<>();
    private ArrayList<Mon> dsMon = new ArrayList<>();
    private ArrayList<LopDocLap> dsLopDocLap = new ArrayList<>();
    private ArrayList<DiemTichLuy> dsTichLuy = new ArrayList<>();
    private String tuKhoa;
    private int tongTrang = 0;
    private int trangHienTai = 1;
    private String maLopGV;

    public String getMaLopGV() {
        return maLopGV;
    }

    public void setMaLopGV(String maLopGV) {
        this.maLopGV = maLopGV;
    }

    /**
     * Khai bao custom table header format
     */
    CustomCellRenderer customHeaderCellRendered = new CustomCellRenderer(
            Color.white,
            new Color(1, 62, 142),
            new Font("Segoe UI", Font.BOLD, 16),
            BorderFactory.createEmptyBorder(), true
    );

    /**
     * Creates new form frmQuanLyDiem
     */
    public FrmQuanLyDiem() {
        initComponents();
        this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        khoiTaoDialogVaForm();
        hienThiMaLopDocLapForm();
        dangTimKiem = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogDiem = new javax.swing.JDialog();
        jPanel4 = new RoundedPanel(50);
        jPanel3 = new RoundedPanel(50);
        jLabel1 = new javax.swing.JLabel();
        pnQuayLai = new RoundedPanel(30);
        btnQuayLai = new javax.swing.JLabel();
        pnDieuKhien = new RoundedPanel(30);
        btnDieuKhien = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbbMon = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        txtMaDiem = new javax.swing.JTextField();
        txtMaSinhVien = new javax.swing.JTextField();
        lblThemSua = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDiemTX1 = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        cbbHocKy = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtTenSinhVien = new javax.swing.JTextField();
        txtDiemKTHP = new javax.swing.JTextField();
        txtDiemTX2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDiemHS2 = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        btnShowSV = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblShowInfor = new javax.swing.JTable();
        lblDS = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbbKyTao = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cbbNamTao = new javax.swing.JComboBox<>();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        cbbLopDocLap = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtTuKhoa = new javax.swing.JTextField();
        pnTimKiem = new RoundedPanel(30);
        btnTimKiem = new javax.swing.JLabel();
        pnThem = new RoundedPanel(30);
        btnThem = new javax.swing.JLabel();
        pnSua = new RoundedPanel(30);
        btnSua = new javax.swing.JLabel();
        pnXoa = new RoundedPanel(30);
        btnXoa = new javax.swing.JLabel();
        pnLamMoi = new RoundedPanel(30);
        btnLamMoi = new javax.swing.JLabel();
        cbbTenMon = new javax.swing.JComboBox<>();
        cbbMaLopDocLap = new javax.swing.JComboBox<>();
        pnData = new javax.swing.JPanel();
        pnTbl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDiem = new javax.swing.JTable();
        pnPhanTrang = new javax.swing.JPanel();
        pnTrangDau = new RoundedPanel(30);
        btnTrangDau = new javax.swing.JLabel();
        pnTrangTruoc = new RoundedPanel(30);
        btnTrangTruoc = new javax.swing.JLabel();
        pnSoTrang = new RoundedPanel(15);
        lblSoTrang = new javax.swing.JLabel();
        pnTrangSau = new RoundedPanel(30);
        btnTrangSau = new javax.swing.JLabel();
        pnTrangCuoi = new RoundedPanel(30);
        btnTrangCuoi = new javax.swing.JLabel();

        dialogDiem.setBackground(new java.awt.Color(255, 255, 255));
        dialogDiem.setMinimumSize(new java.awt.Dimension(460, 680));
        dialogDiem.setModal(true);
        dialogDiem.setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setPreferredSize(new java.awt.Dimension(910, 680));

        jPanel3.setBackground(new java.awt.Color(44, 62, 80));
        jPanel3.setPreferredSize(new java.awt.Dimension(910, 680));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã điểm:");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 30));

        pnQuayLai.setBackground(new java.awt.Color(91, 128, 165));
        pnQuayLai.setOpaque(false);
        pnQuayLai.setPreferredSize(new java.awt.Dimension(80, 50));

        btnQuayLai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnQuayLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/curved-arrow-pointing-left.png"))); // NOI18N
        btnQuayLai.setPreferredSize(new java.awt.Dimension(80, 50));
        btnQuayLai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnQuayLaiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnQuayLaiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnQuayLaiMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnQuayLaiLayout = new javax.swing.GroupLayout(pnQuayLai);
        pnQuayLai.setLayout(pnQuayLaiLayout);
        pnQuayLaiLayout.setHorizontalGroup(
            pnQuayLaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuayLaiLayout.createSequentialGroup()
                .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnQuayLaiLayout.setVerticalGroup(
            pnQuayLaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuayLaiLayout.createSequentialGroup()
                .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnDieuKhien.setBackground(new java.awt.Color(91, 128, 165));
        pnDieuKhien.setOpaque(false);
        pnDieuKhien.setPreferredSize(new java.awt.Dimension(80, 50));

        btnDieuKhien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDieuKhien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/add.png"))); // NOI18N
        btnDieuKhien.setPreferredSize(new java.awt.Dimension(80, 50));
        btnDieuKhien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDieuKhienMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDieuKhienMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDieuKhienMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnDieuKhienLayout = new javax.swing.GroupLayout(pnDieuKhien);
        pnDieuKhien.setLayout(pnDieuKhienLayout);
        pnDieuKhienLayout.setHorizontalGroup(
            pnDieuKhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDieuKhienLayout.createSequentialGroup()
                .addComponent(btnDieuKhien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnDieuKhienLayout.setVerticalGroup(
            pnDieuKhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDieuKhienLayout.createSequentialGroup()
                .addComponent(btnDieuKhien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mã sinh viên:");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tên sinh viên:");
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Môn:");
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Điểm TX1:");
        jLabel7.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Điểm KTHP:");
        jLabel8.setPreferredSize(new java.awt.Dimension(100, 30));

        cbbMon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbMon.setPreferredSize(new java.awt.Dimension(300, 30));
        cbbMon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbMonItemStateChanged(evt);
            }
        });

        txtMaDiem.setEditable(false);
        txtMaDiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaDiem.setPreferredSize(new java.awt.Dimension(300, 30));

        txtMaSinhVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaSinhVien.setPreferredSize(new java.awt.Dimension(300, 30));
        txtMaSinhVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSinhVienKeyReleased(evt);
            }
        });

        lblThemSua.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblThemSua.setForeground(new java.awt.Color(255, 255, 255));
        lblThemSua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThemSua.setPreferredSize(new java.awt.Dimension(33, 60));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Điểm TX2:");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 30));

        txtDiemTX1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiemTX1.setPreferredSize(new java.awt.Dimension(300, 30));

        cbbHocKy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbHocKy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));
        cbbHocKy.setPreferredSize(new java.awt.Dimension(300, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Học kỳ:");
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 30));

        txtTenSinhVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenSinhVien.setPreferredSize(new java.awt.Dimension(300, 30));

        txtDiemKTHP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiemKTHP.setPreferredSize(new java.awt.Dimension(300, 30));

        txtDiemTX2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiemTX2.setPreferredSize(new java.awt.Dimension(300, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Điểm HS2:");
        jLabel10.setPreferredSize(new java.awt.Dimension(100, 30));

        txtDiemHS2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiemHS2.setPreferredSize(new java.awt.Dimension(300, 30));

        btnShowSV.setText("?");
        btnShowSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSVActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("ĐIỂM SINH VIÊN");
        jLabel11.setPreferredSize(new java.awt.Dimension(33, 60));

        tblShowInfor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblShowInfor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblShowInfor.setFocusable(false);
        tblShowInfor.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblShowInfor.setRowHeight(30);
        tblShowInfor.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tblShowInfor.setShowVerticalLines(false);
        tblShowInfor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblShowInforMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblShowInfor);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        lblDS.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDS.setForeground(new java.awt.Color(255, 255, 255));
        lblDS.setText("Danh sách sinh viên:");
        lblDS.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Năm học:");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Lớp độc lập:");
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 30));

        cbbKyTao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbKyTao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbKyTao.setPreferredSize(new java.awt.Dimension(100, 30));
        cbbKyTao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbKyTaoItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Kỳ học:");
        jLabel13.setPreferredSize(new java.awt.Dimension(100, 30));

        cbbNamTao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbNamTao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbNamTao.setPreferredSize(new java.awt.Dimension(60, 30));
        cbbNamTao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbNamTaoItemStateChanged(evt);
            }
        });

        cbbLopDocLap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbLopDocLap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbLopDocLap.setPreferredSize(new java.awt.Dimension(300, 30));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(73, 73, 73)
                            .addComponent(lblThemSua, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbbMon, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnShowSV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(txtMaDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbbHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDiemKTHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDiemTX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDiemHS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbbNamTao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbbKyTao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDiemTX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbbLopDocLap, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(pnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(pnDieuKhien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDS, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThemSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowSV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbKyTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbNamTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbLopDocLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiemTX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiemTX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiemHS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiemKTHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnDieuKhien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnShowSV, txtMaSinhVien});

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout dialogDiemLayout = new javax.swing.GroupLayout(dialogDiem.getContentPane());
        dialogDiem.getContentPane().setLayout(dialogDiemLayout);
        dialogDiemLayout.setHorizontalGroup(
            dialogDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogDiemLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        dialogDiemLayout.setVerticalGroup(
            dialogDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setBackground(new java.awt.Color(179, 213, 241));

        jPanel2.setBackground(new java.awt.Color(179, 213, 241));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N

        txtTuKhoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTuKhoa.setPreferredSize(new java.awt.Dimension(200, 30));
        txtTuKhoa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTuKhoaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTuKhoaFocusLost(evt);
            }
        });
        jPanel2.add(txtTuKhoa);

        pnTimKiem.setBackground(new java.awt.Color(2, 62, 116));
        pnTimKiem.setOpaque(false);
        pnTimKiem.setPreferredSize(new java.awt.Dimension(80, 50));

        btnTimKiem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/magnifying-glass.png"))); // NOI18N
        btnTimKiem.setPreferredSize(new java.awt.Dimension(80, 50));
        btnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnTimKiemLayout = new javax.swing.GroupLayout(pnTimKiem);
        pnTimKiem.setLayout(pnTimKiemLayout);
        pnTimKiemLayout.setHorizontalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnTimKiemLayout.setVerticalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(pnTimKiem);

        pnThem.setBackground(new java.awt.Color(2, 62, 116));
        pnThem.setOpaque(false);
        pnThem.setPreferredSize(new java.awt.Dimension(80, 50));

        btnThem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/add.png"))); // NOI18N
        btnThem.setPreferredSize(new java.awt.Dimension(80, 50));
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnThemLayout = new javax.swing.GroupLayout(pnThem);
        pnThem.setLayout(pnThemLayout);
        pnThemLayout.setHorizontalGroup(
            pnThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThemLayout.createSequentialGroup()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
        );
        pnThemLayout.setVerticalGroup(
            pnThemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThemLayout.createSequentialGroup()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(pnThem);

        pnSua.setBackground(new java.awt.Color(2, 62, 116));
        pnSua.setOpaque(false);
        pnSua.setPreferredSize(new java.awt.Dimension(80, 50));

        btnSua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/draw.png"))); // NOI18N
        btnSua.setPreferredSize(new java.awt.Dimension(80, 50));
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSuaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSuaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnSuaLayout = new javax.swing.GroupLayout(pnSua);
        pnSua.setLayout(pnSuaLayout);
        pnSuaLayout.setHorizontalGroup(
            pnSuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSuaLayout.createSequentialGroup()
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnSuaLayout.setVerticalGroup(
            pnSuaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSuaLayout.createSequentialGroup()
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(pnSua);

        pnXoa.setBackground(new java.awt.Color(2, 62, 116));
        pnXoa.setOpaque(false);
        pnXoa.setPreferredSize(new java.awt.Dimension(80, 50));

        btnXoa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/trash.png"))); // NOI18N
        btnXoa.setPreferredSize(new java.awt.Dimension(80, 50));
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnXoaLayout = new javax.swing.GroupLayout(pnXoa);
        pnXoa.setLayout(pnXoaLayout);
        pnXoaLayout.setHorizontalGroup(
            pnXoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnXoaLayout.createSequentialGroup()
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnXoaLayout.setVerticalGroup(
            pnXoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnXoaLayout.createSequentialGroup()
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(pnXoa);

        pnLamMoi.setBackground(new java.awt.Color(2, 62, 116));
        pnLamMoi.setOpaque(false);
        pnLamMoi.setPreferredSize(new java.awt.Dimension(80, 50));

        btnLamMoi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/refresh.png"))); // NOI18N
        btnLamMoi.setPreferredSize(new java.awt.Dimension(80, 50));
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnLamMoiLayout = new javax.swing.GroupLayout(pnLamMoi);
        pnLamMoi.setLayout(pnLamMoiLayout);
        pnLamMoiLayout.setHorizontalGroup(
            pnLamMoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLamMoiLayout.createSequentialGroup()
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnLamMoiLayout.setVerticalGroup(
            pnLamMoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLamMoiLayout.createSequentialGroup()
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(pnLamMoi);

        cbbTenMon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbTenMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbTenMon.setPreferredSize(new java.awt.Dimension(250, 30));
        cbbTenMon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbTenMonItemStateChanged(evt);
            }
        });
        jPanel2.add(cbbTenMon);

        cbbMaLopDocLap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbMaLopDocLap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbMaLopDocLap.setPreferredSize(new java.awt.Dimension(120, 30));
        cbbMaLopDocLap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbMaLopDocLapItemStateChanged(evt);
            }
        });
        jPanel2.add(cbbMaLopDocLap);

        pnData.setBackground(new java.awt.Color(179, 213, 241));
        pnData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin điểm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N

        pnTbl.setBackground(new java.awt.Color(179, 213, 241));

        tblDiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDiem.setFocusable(false);
        tblDiem.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDiem.setRowHeight(30);
        tblDiem.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tblDiem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblDiem.setShowVerticalLines(false);
        tblDiem.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDiem);

        javax.swing.GroupLayout pnTblLayout = new javax.swing.GroupLayout(pnTbl);
        pnTbl.setLayout(pnTblLayout);
        pnTblLayout.setHorizontalGroup(
            pnTblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnTblLayout.setVerticalGroup(
            pnTblLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTblLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pnPhanTrang.setBackground(new java.awt.Color(179, 213, 241));
        pnPhanTrang.setPreferredSize(new java.awt.Dimension(0, 80));

        pnTrangDau.setBackground(new java.awt.Color(2, 62, 116));
        pnTrangDau.setOpaque(false);
        pnTrangDau.setPreferredSize(new java.awt.Dimension(80, 50));

        btnTrangDau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTrangDau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/double-left-chevron.png"))); // NOI18N
        btnTrangDau.setToolTipText("");
        btnTrangDau.setPreferredSize(new java.awt.Dimension(80, 50));
        btnTrangDau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrangDauMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTrangDauMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTrangDauMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnTrangDauLayout = new javax.swing.GroupLayout(pnTrangDau);
        pnTrangDau.setLayout(pnTrangDauLayout);
        pnTrangDauLayout.setHorizontalGroup(
            pnTrangDauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangDauLayout.createSequentialGroup()
                .addComponent(btnTrangDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnTrangDauLayout.setVerticalGroup(
            pnTrangDauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangDauLayout.createSequentialGroup()
                .addComponent(btnTrangDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnPhanTrang.add(pnTrangDau);

        pnTrangTruoc.setBackground(new java.awt.Color(2, 62, 116));
        pnTrangTruoc.setOpaque(false);
        pnTrangTruoc.setPreferredSize(new java.awt.Dimension(80, 50));

        btnTrangTruoc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTrangTruoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/left-arrow-angle-big-gross-symbol.png"))); // NOI18N
        btnTrangTruoc.setToolTipText("");
        btnTrangTruoc.setPreferredSize(new java.awt.Dimension(80, 50));
        btnTrangTruoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrangTruocMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTrangTruocMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTrangTruocMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnTrangTruocLayout = new javax.swing.GroupLayout(pnTrangTruoc);
        pnTrangTruoc.setLayout(pnTrangTruocLayout);
        pnTrangTruocLayout.setHorizontalGroup(
            pnTrangTruocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangTruocLayout.createSequentialGroup()
                .addComponent(btnTrangTruoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnTrangTruocLayout.setVerticalGroup(
            pnTrangTruocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangTruocLayout.createSequentialGroup()
                .addComponent(btnTrangTruoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnPhanTrang.add(pnTrangTruoc);

        pnSoTrang.setBackground(new java.awt.Color(179, 213, 241));
        pnSoTrang.setPreferredSize(new java.awt.Dimension(80, 50));

        lblSoTrang.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblSoTrang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoTrang.setText("2/2");
        lblSoTrang.setToolTipText("");
        lblSoTrang.setPreferredSize(new java.awt.Dimension(80, 50));

        javax.swing.GroupLayout pnSoTrangLayout = new javax.swing.GroupLayout(pnSoTrang);
        pnSoTrang.setLayout(pnSoTrangLayout);
        pnSoTrangLayout.setHorizontalGroup(
            pnSoTrangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSoTrangLayout.createSequentialGroup()
                .addComponent(lblSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnSoTrangLayout.setVerticalGroup(
            pnSoTrangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSoTrangLayout.createSequentialGroup()
                .addComponent(lblSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnPhanTrang.add(pnSoTrang);

        pnTrangSau.setBackground(new java.awt.Color(2, 62, 116));
        pnTrangSau.setOpaque(false);
        pnTrangSau.setPreferredSize(new java.awt.Dimension(80, 50));

        btnTrangSau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTrangSau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/right-arrow.png"))); // NOI18N
        btnTrangSau.setToolTipText("");
        btnTrangSau.setPreferredSize(new java.awt.Dimension(80, 50));
        btnTrangSau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrangSauMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTrangSauMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTrangSauMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnTrangSauLayout = new javax.swing.GroupLayout(pnTrangSau);
        pnTrangSau.setLayout(pnTrangSauLayout);
        pnTrangSauLayout.setHorizontalGroup(
            pnTrangSauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangSauLayout.createSequentialGroup()
                .addComponent(btnTrangSau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnTrangSauLayout.setVerticalGroup(
            pnTrangSauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangSauLayout.createSequentialGroup()
                .addComponent(btnTrangSau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnPhanTrang.add(pnTrangSau);

        pnTrangCuoi.setBackground(new java.awt.Color(2, 62, 116));
        pnTrangCuoi.setOpaque(false);
        pnTrangCuoi.setPreferredSize(new java.awt.Dimension(80, 50));

        btnTrangCuoi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTrangCuoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resouces/double-angle-pointing-to-right.png"))); // NOI18N
        btnTrangCuoi.setToolTipText("");
        btnTrangCuoi.setPreferredSize(new java.awt.Dimension(80, 50));
        btnTrangCuoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrangCuoiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTrangCuoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTrangCuoiMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnTrangCuoiLayout = new javax.swing.GroupLayout(pnTrangCuoi);
        pnTrangCuoi.setLayout(pnTrangCuoiLayout);
        pnTrangCuoiLayout.setHorizontalGroup(
            pnTrangCuoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangCuoiLayout.createSequentialGroup()
                .addComponent(btnTrangCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnTrangCuoiLayout.setVerticalGroup(
            pnTrangCuoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTrangCuoiLayout.createSequentialGroup()
                .addComponent(btnTrangCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnPhanTrang.add(pnTrangCuoi);

        javax.swing.GroupLayout pnDataLayout = new javax.swing.GroupLayout(pnData);
        pnData.setLayout(pnDataLayout);
        pnDataLayout.setHorizontalGroup(
            pnDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnPhanTrang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnDataLayout.setVerticalGroup(
            pnDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDataLayout.createSequentialGroup()
                .addComponent(pnTbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPhanTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1047, Short.MAX_VALUE)
            .addComponent(pnData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTrangSauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangSauMouseClicked
        if (trangHienTai < tongTrang) {
            trangHienTai++;
            if (dangTimKiem) {
                dsDiem = DiemDAO.getInstance().layTTDiemTheoTrangTimKiem(maLopGV, trangHienTai, tuKhoa);
                getOldData();
                setClickState();
            } else {
                layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
            }
            loadDuLieu();
        }
    }//GEN-LAST:event_btnTrangSauMouseClicked

    private void btnTrangCuoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangCuoiMouseClicked
        trangHienTai = tongTrang;
        if (dangTimKiem) {
            dsDiem = DiemDAO.getInstance().layTTDiemTheoTrangTimKiem(maLopGV, trangHienTai, tuKhoa);
            getOldData();
            setClickState();
        } else {
            layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
        }
        loadDuLieu();
    }//GEN-LAST:event_btnTrangCuoiMouseClicked

    private void btnTrangTruocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangTruocMouseClicked
        if (trangHienTai > 1) {
            trangHienTai--;
            if (dangTimKiem) {
                dsDiem = DiemDAO.getInstance().layTTDiemTheoTrangTimKiem(maLopGV, trangHienTai, tuKhoa);
                getOldData();
                setClickState();
            } else {
                layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
            }
            loadDuLieu();
        }
    }//GEN-LAST:event_btnTrangTruocMouseClicked

    private void btnTrangDauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangDauMouseClicked
        trangHienTai = 1;
        if (dangTimKiem) {
            dsDiem = DiemDAO.getInstance().layTTDiemTheoTrangTimKiem(maLopGV, trangHienTai, tuKhoa);
            getOldData();
            setClickState();
        } else {
            layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
        }
        loadDuLieu();
    }//GEN-LAST:event_btnTrangDauMouseClicked

    private void btnTrangDauMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangDauMouseEntered
        hoverBtn(pnTrangDau, true);
        isClick = false;
    }//GEN-LAST:event_btnTrangDauMouseEntered

    private void btnTrangDauMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangDauMouseExited
        if (!isClick) {
            hoverBtn(pnTrangDau, false);
        } else
            pnTrangDau.setBackground(colorMenu);
    }//GEN-LAST:event_btnTrangDauMouseExited

    private void btnTrangTruocMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangTruocMouseEntered
        hoverBtn(pnTrangTruoc, true);
        isClick = false;
    }//GEN-LAST:event_btnTrangTruocMouseEntered

    private void btnTrangTruocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangTruocMouseExited
        if (!isClick) {
            hoverBtn(pnTrangTruoc, false);
        } else
            pnTrangTruoc.setBackground(colorMenu);
    }//GEN-LAST:event_btnTrangTruocMouseExited

    private void btnTrangSauMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangSauMouseEntered
        hoverBtn(pnTrangSau, true);
        isClick = false;
    }//GEN-LAST:event_btnTrangSauMouseEntered

    private void btnTrangSauMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangSauMouseExited
        if (!isClick) {
            hoverBtn(pnTrangSau, false);
        } else
            pnTrangSau.setBackground(colorMenu);
    }//GEN-LAST:event_btnTrangSauMouseExited

    private void btnTrangCuoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangCuoiMouseEntered
        hoverBtn(pnTrangCuoi, true);
        isClick = false;
    }//GEN-LAST:event_btnTrangCuoiMouseEntered

    private void btnTrangCuoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrangCuoiMouseExited
        if (!isClick) {
            hoverBtn(pnTrangCuoi, false);
        } else
            pnTrangCuoi.setBackground(colorMenu);
    }//GEN-LAST:event_btnTrangCuoiMouseExited

    private void btnTimKiemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseEntered
        hoverBtn(pnTimKiem, true);
        isClick = false;
    }//GEN-LAST:event_btnTimKiemMouseEntered

    private void btnTimKiemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseExited
        if (!isClick) {
            hoverBtn(pnTimKiem, false);
        } else
            pnTimKiem.setBackground(colorMenu);
    }//GEN-LAST:event_btnTimKiemMouseExited

    private void btnThemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseEntered
        hoverBtn(pnThem, true);
    }//GEN-LAST:event_btnThemMouseEntered

    private void btnThemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseExited
        hoverBtn(pnThem, false);
    }//GEN-LAST:event_btnThemMouseExited

    private void btnSuaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseEntered
        hoverBtn(pnSua, true);
    }//GEN-LAST:event_btnSuaMouseEntered

    private void btnSuaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseExited
        hoverBtn(pnSua, false);
    }//GEN-LAST:event_btnSuaMouseExited

    private void btnXoaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseEntered
        hoverBtn(pnXoa, true);
    }//GEN-LAST:event_btnXoaMouseEntered

    private void btnXoaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseExited
        hoverBtn(pnXoa, false);
    }//GEN-LAST:event_btnXoaMouseExited

    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked
        try {
            dialogType = true;
            dialogDiem.setSize(new Dimension(460, 670));
            dialogDiem.setLocationRelativeTo(null);
            lblThemSua.setText("THÊM MỚI");
            xoaTrang();
            txtMaDiem.setText((DiemDAO.getInstance().layMaDiemCuoi() + 1) + "");
            txtMaDiem.setEditable(false);
            txtTenSinhVien.setEditable(false);
            thayDoiDiem();
            hienThiTTLopDL();
            btnDieuKhien.setIcon(iconThem);
            dialogDiem.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemMouseClicked

    private void btnQuayLaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuayLaiMouseClicked
        hienThiMaLopDocLapForm();
        String[] hocKy = new String[]{"1"};
        cbbHocKy.setModel(new DefaultComboBoxModel(hocKy));
        dialogDiem.setVisible(false);
    }//GEN-LAST:event_btnQuayLaiMouseClicked

    private void btnDieuKhienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDieuKhienMouseClicked
        themSuaDiem();
    }//GEN-LAST:event_btnDieuKhienMouseClicked

    private void btnSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseClicked
        try {
            dialogType = false;
            dialogDiem.setSize(new Dimension(460, 670));
            dialogDiem.setLocationRelativeTo(null);
            selectedRow = tblDiem.getSelectedRow();
            if (selectedRow < 0 || selectedRow > dsDiem.size()) {
                throw new Exception("Vui lòng chọn bản ghi cần sửa!");
            } else if (dsDiem.isEmpty()) {
                throw new Exception("Vui lòng nhập dữ liệu trước khi sửa!");
            }
            lblThemSua.setText("THAY ĐỔI");
            Diem diem = dsDiem.get(selectedRow);
            txtMaDiem.setText(String.valueOf(diem.getMaDiem()));
            txtMaSinhVien.setText(String.valueOf(diem.getSinhVien().getMaSinhVien()));
            txtTenSinhVien.setText(diem.getSinhVien().getTenSinhVien());
            txtTenSinhVien.setEditable(false);
            cbbMon.setSelectedItem(diem.getLopDocLap().getMon().getTenMon());
            hienThiHocKySV(diem.getSinhVien().getMaSinhVien());
            cbbHocKy.setSelectedItem(String.valueOf(diem.getHocKy()));
            hienThiTTLopDL();
            txtDiemHS2.setText(String.valueOf(diem.getDiemHS2()));
            txtDiemKTHP.setText(String.valueOf(diem.getDiemKTHP()));
            txtDiemTX1.setText(String.valueOf(diem.getDiemTX1()));
            txtDiemTX2.setText(String.valueOf(diem.getDiemTX2()));
            btnDieuKhien.setIcon(iconSua);
            dialogDiem.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSuaMouseClicked

    private void txtTuKhoaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTuKhoaFocusGained
        if (txtTuKhoa.getText().equals("Nhập từ khóa tìm kiếm...") || txtTuKhoa.getText().equals("")) {
            txtTuKhoa.setText("");
            txtTuKhoa.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtTuKhoaFocusGained

    private void txtTuKhoaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTuKhoaFocusLost
        if (txtTuKhoa.getText().equals("")) {
            txtTuKhoa.setText("Nhập từ khóa tìm kiếm...");
            txtTuKhoa.setForeground(new Color(205, 205, 205));
        }
    }//GEN-LAST:event_txtTuKhoaFocusLost

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
        try {
            selectedRow = tblDiem.getSelectedRow();
            if (selectedRow < 0 || selectedRow > dsDiem.size()) {
                throw new Exception("Vui lòng chọn bản ghi cần xóa!");
            } else if (dsDiem.isEmpty()) {
                throw new Exception("Vui lòng nhập dữ liệu trước khi xóa!");
            }
            Diem diem = dsDiem.get(selectedRow);
            int chose = JOptionPane.showConfirmDialog(rootPane, "Bạn có thực sự muốn xóa điểm của " + diem.getSinhVien().getTenSinhVien()
                    + " với môn " + diem.getLopDocLap().getMon().getTenMon(),
                    "Xác nhận xóa", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (chose == JOptionPane.YES_OPTION) {
                if (Controller.getInstance().xoa(diem)) {
                    JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    tinhDiemTBCHK(diem.getSinhVien().getMaSinhVien());
                    laySoTrang(dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon(), dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap());
                    layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
                    loadDuLieu();
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnXoaMouseClicked

    private void btnLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseClicked
        lamMoi();
    }//GEN-LAST:event_btnLamMoiMouseClicked

    private void btnLamMoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseEntered
        hoverBtn(pnLamMoi, true);
        isClick = false;
    }//GEN-LAST:event_btnLamMoiMouseEntered

    private void btnLamMoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseExited
        if (!isClick) {
            hoverBtn(pnLamMoi, false);
        } else
            pnLamMoi.setBackground(colorMenu);
    }//GEN-LAST:event_btnLamMoiMouseExited

    private void btnTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseClicked
        try {
            dangTimKiem = true;
            tuKhoa = txtTuKhoa.getText().trim();
            if (tuKhoa.equalsIgnoreCase("")) {
                throw new Exception("Vui lòng nhập từ khóa cần tìm kiếm!");
            }
            tongTrang = DiemDAO.getInstance().layTongSoBanGhiTimKiem(maLopGV, tuKhoa);
            if (tongTrang == 0) {
                throw new Exception("Không tìm thấy dữ liệu trong bảng");
            }
            tongTrang = tongTrang % 15 == 0 ? tongTrang / 15 : tongTrang / 15 + 1;
            trangHienTai = 1;
            dsDiem = DiemDAO.getInstance().layTTDiemTheoTrangTimKiem(maLopGV, trangHienTai, tuKhoa);
            getOldData();
            setClickState();
            loadDuLieu();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTimKiemMouseClicked

    private void btnQuayLaiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuayLaiMouseEntered
        btnQuayLai.setCursor(handleMouse);
        hoverBtnDialog(pnQuayLai, true);
    }//GEN-LAST:event_btnQuayLaiMouseEntered

    private void btnQuayLaiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuayLaiMouseExited
        btnQuayLai.setCursor(defaultMouse);
        hoverBtnDialog(pnQuayLai, false);
    }//GEN-LAST:event_btnQuayLaiMouseExited

    private void btnDieuKhienMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDieuKhienMouseEntered
        btnDieuKhien.setCursor(handleMouse);
        hoverBtnDialog(pnDieuKhien, true);
    }//GEN-LAST:event_btnDieuKhienMouseEntered

    private void btnDieuKhienMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDieuKhienMouseExited
        btnDieuKhien.setCursor(defaultMouse);
        hoverBtnDialog(pnDieuKhien, false);
    }//GEN-LAST:event_btnDieuKhienMouseExited

    private void txtMaSinhVienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSinhVienKeyReleased
        if (dialogDiem.isVisible()) {
            try {
                String reg = "^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$";
                if (txtMaSinhVien.getText().trim().equals("")) {
                    txtTenSinhVien.setText("");
                    throw new Exception();
                } else if (SinhVienDAO.getInstance().kiemTraMaSV(Integer.parseInt(txtMaSinhVien.getText())) == 0) {
                    txtTenSinhVien.setText("");
                    throw new Exception();
                } else if (!txtMaSinhVien.getText().trim().matches(reg)) {
                    txtTenSinhVien.setText("");
                    throw new Exception();
                }
                txtTenSinhVien.setText(SinhVienDAO.getInstance().layTenSVTheoMa(Integer.parseInt(txtMaSinhVien.getText())));
                hienThiHocKySV(Integer.parseInt(txtMaSinhVien.getText()));
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_txtMaSinhVienKeyReleased

    private void btnShowSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSVActionPerformed
        if (dialogDiem.getSize().getWidth() == 460) {
            dialogDiem.setSize(new Dimension(910, 670));
            dialogDiem.setLocationRelativeTo(null);
            loadInfor();
        } else if (dialogDiem.getSize().getWidth() == 910) {
            dialogDiem.setSize(new Dimension(460, 670));
            dialogDiem.setLocationRelativeTo(null);
        }

    }//GEN-LAST:event_btnShowSVActionPerformed

    private void tblShowInforMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowInforMousePressed
        selectedRow = tblShowInfor.getSelectedRow();
        SinhVien sv = SinhVienDAO.getInstance().layMaVaTenSVTheoLop(maLopGV).get(selectedRow);
        txtMaSinhVien.setText(String.valueOf(sv.getMaSinhVien()));
        txtTenSinhVien.setText(sv.getTenSinhVien());
        hienThiHocKySV(Integer.parseInt(txtMaSinhVien.getText()));
    }//GEN-LAST:event_tblShowInforMousePressed

    private void cbbMonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbMonItemStateChanged
        //thay đổi điểm theo tên môn
        thayDoiDiem();

        //show data cbb năm theo tên môn
        dsLopDocLap = LopDocLapDAO.getInstance().layNamHocTheoTenMon(cbbMon.getItemAt(cbbMon.getSelectedIndex()));
        String[] namHoc = new String[dsLopDocLap.size()];
        int i = 0;
        for (LopDocLap lopDocLap : dsLopDocLap) {
            namHoc[i] = String.valueOf(lopDocLap.getNamHoc());
            i++;
        }
        cbbNamTao.setModel(new DefaultComboBoxModel(namHoc));
        if (cbbNamTao.getItemCount() == 0) {
            cbbKyTao.setModel(new DefaultComboBoxModel());
            cbbLopDocLap.setModel(new DefaultComboBoxModel());
        }
        if (cbbNamTao.getSelectedIndex() == 0) {
            dsLopDocLap = LopDocLapDAO.getInstance().layKyHocTheoMonVaNam(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                    Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())));
            String[] kyHoc = new String[dsLopDocLap.size()];
            int j = 0;
            for (LopDocLap lopDocLap : dsLopDocLap) {
                kyHoc[j] = String.valueOf(lopDocLap.getKyHoc());
                j++;
            }
            cbbKyTao.setModel(new DefaultComboBoxModel(kyHoc));
            if (cbbKyTao.getSelectedIndex() == 0) {
                dsLopDocLap = LopDocLapDAO.getInstance().layMaLopDocLapTheoMonNamKy(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                        Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())), Integer.parseInt(cbbKyTao.getItemAt(cbbKyTao.getSelectedIndex())));
                String[] maLopDL = new String[dsLopDocLap.size()];
                int k = 0;
                for (LopDocLap lopDocLap : dsLopDocLap) {
                    maLopDL[k] = String.valueOf(lopDocLap.getMaLopDocLap());
                    k++;
                }
                cbbLopDocLap.setModel(new DefaultComboBoxModel(maLopDL));
            }
        }
    }//GEN-LAST:event_cbbMonItemStateChanged

    private void cbbMaLopDocLapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbMaLopDocLapItemStateChanged
        laySoTrang(dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon(), dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap());
        layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
        loadDuLieu();
    }//GEN-LAST:event_cbbMaLopDocLapItemStateChanged

    private void cbbTenMonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbTenMonItemStateChanged
        //show data cbb mã lớp độc lập
        dsLopDocLap = LopDocLapDAO.getInstance().layDSLopDocLap(dsMon.get(cbbTenMon.getSelectedIndex()));
        String[] maLopDocLap = new String[dsLopDocLap.size()];
        int k = 0;
        for (LopDocLap lopDocLap : dsLopDocLap) {
            maLopDocLap[k] = String.valueOf(lopDocLap.getMaLopDocLap());
            k++;
        }
        cbbMaLopDocLap.setModel(new DefaultComboBoxModel(maLopDocLap));
        if (cbbMaLopDocLap.getItemCount() != 0) {
            laySoTrang(dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon(), dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap());
            layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
            loadDuLieu();
        } else {
            tblDiem.setModel(new CustomTableDiem());
            for (int i = 0; i < tblDiem.getColumnCount(); i++) {
                tblDiem.getTableHeader().getColumnModel().getColumn(i).setHeaderRenderer(customHeaderCellRendered);
            }
        }
    }//GEN-LAST:event_cbbTenMonItemStateChanged

    private void cbbNamTaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbNamTaoItemStateChanged
        //show data cbb kỳ học
        dsLopDocLap = LopDocLapDAO.getInstance().layKyHocTheoMonVaNam(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())));
        String[] kyHoc = new String[dsLopDocLap.size()];
        int i = 0;
        for (LopDocLap lopDocLap : dsLopDocLap) {
            kyHoc[i] = String.valueOf(lopDocLap.getKyHoc());
            i++;
        }
        cbbKyTao.setModel(new DefaultComboBoxModel(kyHoc));
        if (cbbKyTao.getSelectedIndex() == 0) {
            dsLopDocLap = LopDocLapDAO.getInstance().layMaLopDocLapTheoMonNamKy(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                    Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())), Integer.parseInt(cbbKyTao.getItemAt(cbbKyTao.getSelectedIndex())));
            String[] maLopDL = new String[dsLopDocLap.size()];
            int k = 0;
            for (LopDocLap lopDocLap : dsLopDocLap) {
                maLopDL[k] = String.valueOf(lopDocLap.getMaLopDocLap());
                k++;
            }
            cbbLopDocLap.setModel(new DefaultComboBoxModel(maLopDL));
        }
    }//GEN-LAST:event_cbbNamTaoItemStateChanged

    private void cbbKyTaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbKyTaoItemStateChanged
        //show data cbb mã lớp độc lập
        dsLopDocLap = LopDocLapDAO.getInstance().layMaLopDocLapTheoMonNamKy(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())), Integer.parseInt(cbbKyTao.getItemAt(cbbKyTao.getSelectedIndex())));
        String[] maLopDL = new String[dsLopDocLap.size()];
        int i = 0;
        for (LopDocLap lopDocLap : dsLopDocLap) {
            maLopDL[i] = String.valueOf(lopDocLap.getMaLopDocLap());
            i++;
        }
        cbbLopDocLap.setModel(new DefaultComboBoxModel(maLopDL));
    }//GEN-LAST:event_cbbKyTaoItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnDieuKhien;
    private javax.swing.JLabel btnLamMoi;
    private javax.swing.JLabel btnQuayLai;
    private javax.swing.JButton btnShowSV;
    private javax.swing.JLabel btnSua;
    private javax.swing.JLabel btnThem;
    private javax.swing.JLabel btnTimKiem;
    private javax.swing.JLabel btnTrangCuoi;
    private javax.swing.JLabel btnTrangDau;
    private javax.swing.JLabel btnTrangSau;
    private javax.swing.JLabel btnTrangTruoc;
    private javax.swing.JLabel btnXoa;
    private javax.swing.JComboBox<String> cbbHocKy;
    private javax.swing.JComboBox<String> cbbKyTao;
    private javax.swing.JComboBox<String> cbbLopDocLap;
    private javax.swing.JComboBox<String> cbbMaLopDocLap;
    private javax.swing.JComboBox<String> cbbMon;
    private javax.swing.JComboBox<String> cbbNamTao;
    private javax.swing.JComboBox<String> cbbTenMon;
    private javax.swing.JDialog dialogDiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblDS;
    private javax.swing.JLabel lblSoTrang;
    private javax.swing.JLabel lblThemSua;
    private javax.swing.JPanel pnData;
    private javax.swing.JPanel pnDieuKhien;
    private javax.swing.JPanel pnLamMoi;
    private javax.swing.JPanel pnPhanTrang;
    private javax.swing.JPanel pnQuayLai;
    private javax.swing.JPanel pnSoTrang;
    private javax.swing.JPanel pnSua;
    private javax.swing.JPanel pnTbl;
    private javax.swing.JPanel pnThem;
    private javax.swing.JPanel pnTimKiem;
    private javax.swing.JPanel pnTrangCuoi;
    private javax.swing.JPanel pnTrangDau;
    private javax.swing.JPanel pnTrangSau;
    private javax.swing.JPanel pnTrangTruoc;
    private javax.swing.JPanel pnXoa;
    private javax.swing.JTable tblDiem;
    private javax.swing.JTable tblShowInfor;
    private javax.swing.JTextField txtDiemHS2;
    private javax.swing.JTextField txtDiemKTHP;
    private javax.swing.JTextField txtDiemTX1;
    private javax.swing.JTextField txtDiemTX2;
    private javax.swing.JTextField txtMaDiem;
    private javax.swing.JTextField txtMaSinhVien;
    private javax.swing.JTextField txtTenSinhVien;
    private javax.swing.JTextField txtTuKhoa;
    // End of variables declaration//GEN-END:variables

    private void laySoTrang(String tenMon, int maLopDocLap) {
        tongTrang = DiemDAO.getInstance().layTongSoBanGhi(maLopGV, tenMon, maLopDocLap);
        tongTrang = tongTrang % 15 == 0 ? tongTrang / 15 : tongTrang / 15 + 1;
    }

    private void loadDuLieu() {
        tblDiem.setModel(new CustomTableDiem(dsDiem));
        lblSoTrang.setText(trangHienTai + "/" + tongTrang);
        for (int i = 0; i < tblDiem.getColumnCount(); i++) {
            tblDiem.getTableHeader().getColumnModel().getColumn(i).setHeaderRenderer(customHeaderCellRendered);
            tblDiem.getTableHeader().getColumnModel().getColumn(i).setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public void setHorizontalAlignment(int alignment) {
                    super.setHorizontalAlignment(CENTER); //To change body of generated methods, choose Tools | Templates.
                }
            });
        }
    }

    private void layDsTheoTrang(int trangHienTai, int maLopDocLap, String tenMon) {
        dsDiem = DiemDAO.getInstance().layTTDiemTheoTrang(maLopGV, trangHienTai, maLopDocLap, tenMon);
        getOldData();
        setClickState();
    }

    private void hoverBtn(JPanel pn, boolean b) {
        if (b) {
            this.setCursor(handleMouse);
            Thread thread = new Thread() {
                @Override
                public void run() {
                    try {
                        for (int i = 0; i <= 5; i++) {
                            Thread.sleep(3);
                            pn.setLocation(pn.getX(), pn.getY() - 1);
                        }
                    } catch (InterruptedException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            };
            thread.start();
            pn.setBackground(colorHoverMenu);
        } else {
            this.setCursor(defaultMouse);
            Thread thread = new Thread() {
                @Override
                public void run() {
                    try {
                        for (int i = 5; i >= 0; i--) {
                            Thread.sleep(3);
                            pn.setLocation(pn.getX(), pn.getY() + 1);
                        }
                    } catch (InterruptedException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            };
            thread.start();
            pn.setBackground(colorMenu);
        }
    }

    private void hoverBtnDialog(JPanel pn, boolean b) {
        if (b) {
            this.setCursor(handleMouse);
            Thread thread = new Thread() {
                @Override
                public void run() {
                    try {
                        for (int i = 0; i <= 5; i++) {
                            Thread.sleep(3);
                            pn.setLocation(pn.getX(), pn.getY() - 1);
                        }
                    } catch (InterruptedException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            };
            thread.start();
            pn.setBackground(colorBtnDialogHover);
        } else {
            this.setCursor(defaultMouse);
            Thread thread = new Thread() {
                @Override
                public void run() {
                    try {
                        for (int i = 5; i >= 0; i--) {
                            Thread.sleep(4);
                            pn.setLocation(pn.getX(), pn.getY() + 1);
                        }
                    } catch (InterruptedException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            };
            thread.start();
            pn.setBackground(colorBtnDialog);
        }
    }

    private void themSuaDiem() {
        try {
            String reg = "^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$";
            if (dialogType) {
                if (txtMaSinhVien.getText().trim().equals("")) {
                    throw new Exception("Mã sinh viên không được để trống");
                } else if (!txtMaSinhVien.getText().trim().matches(reg)) {
                    throw new Exception("Mã sinh viên phải là số");
                } else if (SinhVienDAO.getInstance().kiemTraMaSV(Integer.parseInt(txtMaSinhVien.getText())) == 0) {
                    throw new Exception("Mã sinh viên không tồn tại");
                }
                if (txtTenSinhVien.getText().trim().equals("")) {
                    throw new Exception("Tên sinh viên không được để trống");
                }
                if (cbbNamTao.getItemCount() == 0) {
                    throw new Exception("Không có lớp độc lập cho môn " + cbbMon.getItemAt(cbbMon.getSelectedIndex()));
                }
                if (txtDiemTX1.getText().trim().equals("")) {
                    throw new Exception("Điểm thường xuyên 1 không được để trống");
                } else if (!txtDiemTX1.getText().trim().matches(reg)) {
                    throw new Exception("Điểm thường xuyên 1 phải là số");
                }
                if (txtDiemTX2.getText().trim().equals("")) {
                    throw new Exception("Điểm thường xuyên 2 không được để trống");
                } else if (!txtDiemTX2.getText().trim().matches(reg)) {
                    throw new Exception("Điểm thường xuyên 2 phải là số");
                }
                if (txtDiemHS2.getText().trim().equals("")) {
                    throw new Exception("Điểm hệ số 2 không được để trống");
                } else if (!txtDiemHS2.getText().trim().matches(reg)) {
                    throw new Exception("Điểm hệ số 2 phải là số");
                }
                if (txtDiemKTHP.getText().trim().equals("")) {
                    throw new Exception("Điểm kết thúc học phần không được để trống");
                } else if (!txtDiemKTHP.getText().trim().matches(reg)) {
                    throw new Exception("Điểm kết thúc học phần phải là số");
                }
                if (DiemDAO.getInstance().kiemTraDaTonTaiDiem(Integer.parseInt(txtMaSinhVien.getText()), cbbMon.getItemAt(cbbMon.getSelectedIndex()), Integer.parseInt(cbbHocKy.getItemAt(cbbHocKy.getSelectedIndex()))) == 0) {
                    throw new Exception("Đã tồn tại điểm của sinh viên " + txtTenSinhVien.getText() + " với môn " + cbbMon.getItemAt(cbbMon.getSelectedIndex()) + " trong học kỳ " + cbbHocKy.getItemAt(cbbHocKy.getSelectedIndex()));
                }
                Diem diem = new Diem();
                diem.setMaDiem(Integer.parseInt(txtMaDiem.getText()));
                diem.getSinhVien().setMaSinhVien(Integer.parseInt(txtMaSinhVien.getText()));
                diem.getLopDocLap().setMaLopDocLap(Integer.parseInt(cbbLopDocLap.getItemAt(cbbLopDocLap.getSelectedIndex())));
                diem.setHocKy(Integer.parseInt(cbbHocKy.getItemAt(cbbHocKy.getSelectedIndex())));
                diem.setDiemHS2(Float.parseFloat(txtDiemHS2.getText()));
                diem.setDiemTX2(Float.parseFloat(txtDiemTX2.getText()));
                diem.setDiemTX1(Float.parseFloat(txtDiemTX1.getText()));
                diem.setDiemKTHP(Float.parseFloat(txtDiemKTHP.getText()));
                if (Controller.getInstance().themMoi(diem)) {
                    JOptionPane.showMessageDialog(null, "Thêm điểm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    tinhDiemTBCHK(Integer.parseInt(txtMaSinhVien.getText()));
                    hienThiMaLopDocLapForm();
                    String[] hocKy = new String[]{"1"};
                    cbbHocKy.setModel(new DefaultComboBoxModel(hocKy));
                    laySoTrang(dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon(), dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap());
                    layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
                    loadDuLieu();
                    dangTimKiem = false;
                    txtTuKhoa.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Thêm điểm thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
                dialogDiem.setVisible(false);
            } else {
                if (txtMaSinhVien.getText().trim().equals("")) {
                    throw new Exception("Mã sinh viên không được để trống");
                } else if (SinhVienDAO.getInstance().kiemTraMaSV(Integer.parseInt(txtMaSinhVien.getText())) == 0) {
                    throw new Exception("Mã sinh viên không tồn tại");
                } else if (!txtMaSinhVien.getText().trim().matches(reg)) {
                    throw new Exception("Mã sinh viên phải là số");
                }
                if (txtTenSinhVien.getText().trim().equals("")) {
                    throw new Exception("Tên sinh viên không được để trống");
                }
                if (cbbNamTao.getItemCount() == 0) {
                    throw new Exception("Không có lớp độc lập cho môn " + cbbMon.getItemAt(cbbMon.getSelectedIndex()));
                }
                if (txtDiemTX1.getText().trim().equals("")) {
                    throw new Exception("Điểm thường xuyên 1 không được để trống");
                } else if (!txtDiemTX1.getText().trim().matches(reg)) {
                    throw new Exception("Điểm thường xuyên 1 phải là số");
                }
                if (txtDiemTX2.getText().trim().equals("")) {
                    throw new Exception("Điểm thường xuyên 2 không được để trống");
                } else if (!txtDiemTX2.getText().trim().matches(reg)) {
                    throw new Exception("Điểm thường xuyên 2 phải là số");
                }
                if (txtDiemHS2.getText().trim().equals("")) {
                    throw new Exception("Điểm hệ số 2 không được để trống");
                } else if (!txtDiemHS2.getText().trim().matches(reg)) {
                    throw new Exception("Điểm hệ số 2 phải là số");
                }
                if (txtDiemKTHP.getText().trim().equals("")) {
                    throw new Exception("Điểm kết thúc học phần không được để trống");
                } else if (!txtDiemKTHP.getText().trim().matches(reg)) {
                    throw new Exception("Điểm kết thúc học phần phải là số");
                }
                Diem diem = new Diem();
                diem.setMaDiem(Integer.parseInt(txtMaDiem.getText()));
                diem.getSinhVien().setMaSinhVien(Integer.parseInt(txtMaSinhVien.getText()));
                diem.getLopDocLap().setMaLopDocLap(Integer.parseInt(cbbLopDocLap.getItemAt(cbbLopDocLap.getSelectedIndex())));
                diem.setHocKy(Integer.parseInt(cbbHocKy.getItemAt(cbbHocKy.getSelectedIndex())));
                diem.setDiemHS2(Float.parseFloat(txtDiemHS2.getText()));
                diem.setDiemTX2(Float.parseFloat(txtDiemTX2.getText()));
                diem.setDiemTX1(Float.parseFloat(txtDiemTX1.getText()));
                diem.setDiemKTHP(Float.parseFloat(txtDiemKTHP.getText()));
                if (Controller.getInstance().capNhat(diem)) {
                    JOptionPane.showMessageDialog(null, "Thay đổi điểm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    String[] hocKy = new String[]{"1"};
                    cbbHocKy.setModel(new DefaultComboBoxModel(hocKy));
                    tinhDiemTBCHK(Integer.parseInt(txtMaSinhVien.getText()));
                    hienThiMaLopDocLapForm();
                    laySoTrang(dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon(), dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap());
                    layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
                    loadDuLieu();
                    dangTimKiem = false;
                    txtTuKhoa.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Thay đổi điểm thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
                dialogDiem.setVisible(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void khoiTaoDialogVaForm() {
//        dialogDiem.setShape(new RoundRectangle2D.Double(0, 0, dialogDiem.getWidth(), dialogDiem.getHeight(), 50, 50));
        dialogDiem.setLocationRelativeTo(null);
        cbbHocKy.setBackground(Color.WHITE);
        cbbMon.setBackground(Color.WHITE);
        cbbTenMon.setBackground(Color.WHITE);
        cbbKyTao.setBackground(Color.WHITE);
        cbbNamTao.setBackground(Color.WHITE);
        cbbLopDocLap.setBackground(Color.WHITE);
        cbbMaLopDocLap.setBackground(Color.WHITE);

        //show data cbb Môn, Tên môn
        dsMon = MonDAO.getInstance().layDSMon();
        String[] tenMon = new String[dsMon.size()];
        int i = 0;
        for (Mon mon : dsMon) {
            tenMon[i] = mon.getTenMon();
            i++;
        }
        cbbMon.setModel(new DefaultComboBoxModel(tenMon));
        cbbTenMon.setModel(new DefaultComboBoxModel(tenMon));
    }

    private void xoaTrang() {
        txtDiemHS2.setText("");
        txtDiemKTHP.setText("");
        txtDiemTX1.setText("");
        txtDiemTX2.setText("");
        txtMaSinhVien.setText("");
        txtTenSinhVien.setText("");
        txtDiemHS2.setText("");
        cbbMon.setSelectedIndex(0);
        cbbHocKy.setSelectedIndex(0);
    }

    private void loadInfor() {
        tblShowInfor.setModel(new CustomTableInforSV(SinhVienDAO.getInstance().layMaVaTenSVTheoLop(maLopGV)));
        for (int i = 0; i < tblShowInfor.getColumnCount(); i++) {
            tblShowInfor.getTableHeader().getColumnModel().getColumn(i).setHeaderRenderer(customHeaderCellRendered);
            tblShowInfor.getTableHeader().getColumnModel().getColumn(i).setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public void setHorizontalAlignment(int alignment) {
                    super.setHorizontalAlignment(CENTER);
                }
            });
        }
    }

    private void thayDoiDiem() {
        int soTC = MonDAO.getInstance().laySoTinChiTheoTenMon(dsMon.get(cbbMon.getSelectedIndex()).getTenMon());
        if (soTC == 1) {
            txtDiemHS2.setText("0");
            txtDiemTX2.setText("0");
            txtDiemHS2.setEditable(false);
            txtDiemTX2.setEditable(false);
        } else if (soTC > 1 && soTC < 4) {
            txtDiemHS2.setText("0");
            if (dialogType) {
                txtDiemTX2.setText("");
            }
            txtDiemHS2.setEditable(false);
            txtDiemTX2.setEditable(true);
        } else {
            if (dialogType) {
                txtDiemHS2.setText("");
                txtDiemTX2.setText("");
            }
            txtDiemHS2.setEditable(true);
            txtDiemTX2.setEditable(true);
        }
    }

    private void hienThiTTLopDL() {
        if (dialogType) {
            dsLopDocLap = LopDocLapDAO.getInstance().layNamHocTheoTenMon(cbbMon.getItemAt(cbbMon.getSelectedIndex()));
            String[] namHoc = new String[dsLopDocLap.size()];
            int i = 0;
            for (LopDocLap lopDocLap : dsLopDocLap) {
                namHoc[i] = String.valueOf(lopDocLap.getNamHoc());
                i++;
            }
            if (cbbMon.getSelectedIndex() == 0) {
                cbbNamTao.setModel(new DefaultComboBoxModel(namHoc));
                if (cbbNamTao.getItemCount() == 0) {
                    cbbKyTao.setModel(new DefaultComboBoxModel());
                    cbbLopDocLap.setModel(new DefaultComboBoxModel());
                }
                if (cbbNamTao.getSelectedIndex() == 0) {
                    dsLopDocLap = LopDocLapDAO.getInstance().layKyHocTheoMonVaNam(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                            Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())));
                    String[] kyHoc = new String[dsLopDocLap.size()];
                    int j = 0;
                    for (LopDocLap lopDocLap : dsLopDocLap) {
                        kyHoc[j] = String.valueOf(lopDocLap.getKyHoc());
                        j++;
                    }
                    cbbKyTao.setModel(new DefaultComboBoxModel(kyHoc));
                    if (cbbKyTao.getSelectedIndex() == 0) {
                        dsLopDocLap = LopDocLapDAO.getInstance().layMaLopDocLapTheoMonNamKy(cbbMon.getItemAt(cbbMon.getSelectedIndex()),
                                Integer.parseInt(cbbNamTao.getItemAt(cbbNamTao.getSelectedIndex())), Integer.parseInt(cbbKyTao.getItemAt(cbbKyTao.getSelectedIndex())));
                        String[] maLopDL = new String[dsLopDocLap.size()];
                        int k = 0;
                        for (LopDocLap lopDocLap : dsLopDocLap) {
                            maLopDL[k] = String.valueOf(lopDocLap.getMaLopDocLap());
                            k++;
                        }
                        cbbLopDocLap.setModel(new DefaultComboBoxModel(maLopDL));
                    }
                }
            }
        } else {
            dsLopDocLap = LopDocLapDAO.getInstance().layTTLopDLTheoMaDiem(Integer.parseInt(txtMaDiem.getText()));
            String[] namHoc = new String[dsLopDocLap.size()];
            int i = 0;
            for (LopDocLap lopDocLap : dsLopDocLap) {
                namHoc[i] = String.valueOf(lopDocLap.getNamHoc());
                i++;
            }
            cbbNamTao.setModel(new DefaultComboBoxModel(namHoc));

            String[] kyHoc = new String[dsLopDocLap.size()];
            int j = 0;
            for (LopDocLap lopDocLap : dsLopDocLap) {
                kyHoc[j] = String.valueOf(lopDocLap.getKyHoc());
                j++;
            }
            cbbKyTao.setModel(new DefaultComboBoxModel(kyHoc));

            String[] maLopDL = new String[dsLopDocLap.size()];
            int k = 0;
            for (LopDocLap lopDocLap : dsLopDocLap) {
                maLopDL[k] = String.valueOf(lopDocLap.getMaLopDocLap());
                k++;
            }
            cbbLopDocLap.setModel(new DefaultComboBoxModel(maLopDL));
        }
    }

    private void hienThiMaLopDocLapForm() {
        //show data cbb mã lớp độc lập
        dsLopDocLap = LopDocLapDAO.getInstance().layDSLopDocLap(dsMon.get(cbbTenMon.getSelectedIndex()));
        String[] maLopDocLap = new String[dsLopDocLap.size()];
        int i = 0;
        for (LopDocLap lopDocLap : dsLopDocLap) {
            maLopDocLap[i] = String.valueOf(lopDocLap.getMaLopDocLap());
            i++;
        }
        cbbMaLopDocLap.setModel(new DefaultComboBoxModel(maLopDocLap));
    }

    private void tinhDiemTBCHK(int maSV) {
        int dem = 0;
        int check = 0;
        int j = 0;
        dsTichLuy = SinhVienDAO.getInstance().layDiemTichLuy(maSV);
        float[] diemTL = new float[dsTichLuy.size()];
        for (DiemTichLuy diemTLuy : dsTichLuy) {
            diemTL[j] = diemTLuy.getTbcHocKy();
            if (diemTL[j] < 0.8 && diemTLuy.getHky() == 1) {
                dem++;
            } else if (diemTL[j] < 1) {
                dem++;
            } else if (diemTLuy.getTongTinChi() < 12) {
                dem++;
            }
            j++;
        }

        for (int i = 0; i < dsTichLuy.size() - 1; i++) {
            if (diemTL[i] < 0.8 && diemTL[i + 1] < 1 && dsTichLuy.get(i).getHky() == 1) {
                check = 1;
            } else if (diemTL[i] < 1 && diemTL[i + 1] < 1) {
                check = 1;
            } else if (dsTichLuy.get(i).getTongTinChi() < 12 && dsTichLuy.get(i + 1).getTongTinChi() < 12) {
                check = 1;
            }
        }

        if (check == 1) {
            SinhVienDAO.getInstance().thayDoiTrangThaiSV(0, maSV);
        } else if (dem >= 3) {
            SinhVienDAO.getInstance().thayDoiTrangThaiSV(0, maSV);
        } else {
            SinhVienDAO.getInstance().thayDoiTrangThaiSV(1, maSV);
        }
    }

    public void lamMoi() {
        khoiTaoDialogVaForm();
        hienThiMaLopDocLapForm();
        dangTimKiem = false;
        txtTuKhoa.setText("");
        laySoTrang(dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon(), dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap());
        trangHienTai = 1;
        layDsTheoTrang(trangHienTai, dsLopDocLap.get(cbbMaLopDocLap.getSelectedIndex()).getMaLopDocLap(), dsMon.get(cbbTenMon.getSelectedIndex()).getTenMon());
        loadDuLieu();
    }

    private void getOldData() {
//        sizeChanged = tblDiem.getRowCount();
//        if (sizeChanged != 0) {
//            idChanged = dsDiem.get(0).getMaDiem();
//        } else {
//            idChanged = -1;
//        }
    }

    private void setClickState() {
//        if (idChanged != dsDiem.get(0).getMaDiem() || sizeChanged != tblDiem.getRowCount()) {
//            isClick = true;
//        }
    }

    private void hienThiHocKySV(int maSV) {
        //show data cbb Học Kỳ
        int soHocKy = DiemDAO.getInstance().layHocKyLonNhat(maSV) + 1;
        if (soHocKy > 16) {
            soHocKy = 16;
        }
        String[] hocKy = new String[soHocKy];
        for (int j = 0; j < soHocKy; j++) {
            hocKy[j] = String.valueOf(j + 1);
        }
        cbbHocKy.setModel(new DefaultComboBoxModel(hocKy));
    }
}
